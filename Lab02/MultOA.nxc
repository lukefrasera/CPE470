mutex moveMutex;

void move(){
    OnFwd(OUT_AB,-50);
    Wait(500);
    OnFwd(OUT_A,-50);
    OnFwd(OUT_B,50);
    Wait(500);
    OnFwd(OUT_AB,0);
}

void move2(){
    OnFwd(OUT_AB,-50);
    Wait(500);
    OnFwd(OUT_A,-50);
    OnFwd(OUT_B,50);
    Wait(1000);
    OnFwd(OUT_AB,0);
}


task move_forward(){

     while(true){
         Acquire(moveMutex);
         OnFwd(OUT_AB, 50);
         Release(moveMutex);
     }
}
task check_sensor(){
     while(true){

         if(SENSOR_1 == 1 && SENSOR_2 == 0)
         {
            Acquire(moveMutex);
            move();
            Release(moveMutex);
         }
         if(SENSOR_2 == 1 && SENSOR_1 == 0){
            Acquire(moveMutex);
            move();
            Release(moveMutex);
         }
         if(SENSOR_2 == 1 && SENSOR_1 == 1){
            Acquire(moveMutex);
            move2();
            Release(moveMutex);
         }
     }
     
}

task main(){
     SetSensor(IN_1,SENSOR_TOUCH);
     SetSensor(IN_2,SENSOR_TOUCH);
     Precedes(check_sensor, move_forward);
     
}
